version: '3.8'

services:
  voice-chatbot:
    build: ../..
    container_name: ai-voice-assistant-pro
    ports:
      - "5001:5001"
    environment:
      # Flask Configuration
      - FLASK_ENV=production
      - FLASK_APP=main.py
      - SECRET_KEY=your-secret-key-here-change-in-production
      
      # LLM Configuration (set these in your .env file)
      - USE_LLM=true
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      
      # TTS Configuration
      - TTS_RATE=200
      - TTS_VOLUME=0.8
      
      # Speech Recognition Configuration
      - AMBIENT_NOISE_DURATION=1.0
      - TIMEOUT=5
      - PHRASE_TIMEOUT=2
      
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
      # Mount temp directory for TTS audio files
      - ./temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network configuration
    networks:
      - voice-chatbot-network

# Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: voice-chatbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - voice-chatbot
    restart: unless-stopped
    networks:
      - voice-chatbot-network
    profiles:
      - production

networks:
  voice-chatbot-network:
    driver: bridge

volumes:
  logs:
  temp:
